/*!
	Theme Name: Wordpress Boilerplate
	Theme URI: https://github.com/RichardHabeeb/wordpress-boilerplate
	Author: Richard Habeeb
	Author URI: https://habeebr.bitbucket.io/
	Description:
	Tags:
	Version: 1.0
	Requires at least: 5.0
	Tested up to: 5.4
	Requires PHP: 7.0
	License: Apache
	License URI:
	Text Domain: wordpress-boilerplate
*/
@import "reset.less";
@import "theme.less";

/*----------------------------------------------------------------------
 * HELPERS
 *----------------------------------------------------------------------*/
.grid-height(@n-rows) {
	@ret: (@n-rows * @grid-full-height - @gutter-height);
}

.grid-width(@n-cols) {
	@ret: (@n-cols * @grid-full-width - @gutter-width);
}

.grid-full-height(@n-rows) {
	@ret: (@n-rows * @grid-full-height);
}

.grid-full-width(@n-cols) {
	@ret: (@n-cols * @grid-full-width);
}


/*----------------------------------------------------------------------
 * DEVICE RULES
 *----------------------------------------------------------------------*/
.device-rules(@device, @suffix...) {
	/* OVERFLOW/ALIGN -------------------------------------------------*/
	.clip@{suffix} {
		overflow: clip;
	}
	.clip-x@{suffix} {
		overflow-x: clip;
	}
	.wrap@{suffix}, .break-word@{suffix} {
	  word-wrap: break-word;
	}
	.break-all@{suffix} {
	  word-wrap: break-word;
	  word-break: break-all;
	}
	.center@{suffix} {
		text-align: center;
	}
	.left@{suffix} {
		text-align: left;
	}
	.pre-line@{suffix} {
		white-space: pre-line;
	}


	/* LISTS ----------------------------------------------------------*/
	.no-bullets@{suffix}, .list-style-none@{suffix} {
		list-style: none;
	}

	/* FLEX ----------------------------------------------------------*/
	.flex@{suffix} {
		display: flex;
	}

	.flex-center@{suffix} {
		.flex;
		justify-content: center;
	}

	.flex-left@{suffix} {
		.flex;
		justify-content: left;
	}

	.flex-right@{suffix} {
		.flex;
		justify-content: end;
	}

	.flex-v-center@{suffix} {
		.flex;
		align-items: center;
	}

	.flex-top@{suffix} {
		.flex;
		align-items: baseline;
	}

	.flex-bottom@{suffix} {
		.flex;
		align-items: end;
	}

	.flex-column@{suffix} {
		.flex;
		flex-direction: column;
	}

	/* MARGIN ---------------------------------------------------------*/
	.margin-remove-left@{suffix}-gutter {
		margin-left: -@gutter-width;
	}

	.margin-remove-right@{suffix}-gutter {
		margin-right: -@gutter-width;
	}

	.margin-remove-top@{suffix}-gutter {
		margin-top: -@gutter-height;
	}

	.margin-remove-bottom@{suffix}-gutter {
		margin-bottom: -@gutter-height;
	}

	.margin-remove-x@{suffix}-gutter {
		margin-left: -@gutter-width;
		margin-right: -@gutter-width;
	}

	.margin-remove-y@{suffix}-gutter {
		margin-top: -@gutter-height;
		margin-bottom: -@gutter-height;
	}

	.margin-remove@{suffix}-gutter {
		margin: -@gutter-height -@gutter-width;
	}

	.margin-remove@{suffix}-excess-line-height {
		margin-top: calc(-1 * calc(var(--line-height) - var(--cap-height)));
	}

	.margin-none@{suffix} {
		margin: 0;
	}

	.generate-margins(@n, @i: 1) when (@i =< @n) {
		.margin-top@{suffix}-@{i} {
			margin-top: .grid-full-height(@i)[@ret];
		}

		.margin-bottom@{suffix}-@{i} {
			margin-bottom: .grid-full-height(@i)[@ret];
		}

		.margin-left@{suffix}-@{i} {
			margin-left: .grid-full-width(@i)[@ret];
		}

		.margin-right@{suffix}-@{i} {
			margin-right: .grid-full-width(@i)[@ret];
		}

		.margin-x@{suffix}-@{i} {
			margin-left: .grid-full-width(@i)[@ret];
			margin-right: .grid-full-width(@i)[@ret];
		}

		.margin-y@{suffix}-@{i} {
			margin-top: .grid-full-height(@i)[@ret];
			margin-bottom: .grid-full-height(@i)[@ret];
		}

		.margin@{suffix}-@{i} {
			margin: .grid-full-height(@i)[@ret] .grid-full-width(@i)[@ret];
		}

		.margin-remove-top@{suffix}-@{i} {
			margin-top: (-1 * .grid-full-height(@i)[@ret]);
		}

		.margin-remove-bottom@{suffix}-@{i} {
			margin-bottom: (-1 * .grid-full-height(@i)[@ret]);
		}

		.margin-remove-left@{suffix}-@{i} {
			margin-left: -.grid-full-width(@i)[@ret];
		}

		.margin-remove-right@{suffix}-@{i} {
			margin-right: -.grid-full-width(@i)[@ret];
		}

		.margin-remove-x@{suffix}-@{i} {
			margin-left: -.grid-full-width(@i)[@ret];
			margin-right: -.grid-full-width(@i)[@ret];
		}

		.margin-remove-y@{suffix}-@{i} {
			margin-top: -.grid-full-height(@i)[@ret];
			margin-bottom: -.grid-full-height(@i)[@ret];
		}

		.margin-remove-@{suffix}-@{i} {
			margin: -.grid-full-height(@i)[@ret] -.grid-full-width(@i)[@ret];
		}
		.generate-margins(@n, (@i + 1));
	}
	.generate-margins(16);


	/* PADDING --------------------------------------------------------*/
	.padding-none@{suffix} {
		padding: 0;
	}

	.generate-paddings(@n, @i: 1) when (@i =< @n) {
		.padding-top@{suffix}-@{i} {
			padding-top: .grid-full-height(@i)[@ret];
		}

		.padding-bottom@{suffix}-@{i} {
			padding-bottom: .grid-full-height(@i)[@ret];
		}

		.padding-left@{suffix}-@{i} {
			padding-left: .grid-full-width(@i)[@ret];
		}

		.padding-right@{suffix}-@{i} {
			padding-right: .grid-full-width(@i)[@ret];
		}

		.padding-x@{suffix}-@{i} {
			padding-left: .grid-full-width(@i)[@ret];
			padding-right: .grid-full-width(@i)[@ret];
		}

		.padding-y@{suffix}-@{i} {
			padding-top: .grid-full-height(@i)[@ret];
			padding-bottom: .grid-full-height(@i)[@ret];
		}

		.padding@{suffix}-@{i} {
			padding: .grid-full-height(@i)[@ret] .grid-full-width(@i)[@ret];
		}
		.generate-paddings(@n, (@i + 1));
	}
	.generate-paddings(16);

	/* BORDER ---------------------------------------------------------*/
	.circle@{suffix} {
		border-radius: 100%;
	}

	/* SIZE -----------------------------------------------------------*/
	.full-screen-height@{suffix} {
		height: 100vh;
	}

	.full-height@{suffix} {
		height: 100%;
	}

	.full-width@{suffix} {
		width: 100%;
	}

	.width@{suffix}-auto {
		width: auto;
	}

	.generate-sizes(@n, @i: 1) when (@i =< @n) {
		.height@{suffix}-@{i} {
			height: .grid-height(@i)[@ret];
		}
		.width@{suffix}-@{i} {
			width: .grid-width(@i)[@ret];
		}
		.generate-sizes(@n, (@i + 1));
	}
	.generate-sizes(16);


	/* TYPOGRAPHY -----------------------------------------------------*/
	.generate-typography(@n, @i: 1) when (@i =< @n) {
		.cap-height@{suffix}-@{i} {
			--cap-height: .grid-height(@i)[@ret];
		}

		.line-height@{suffix}-@{i} {
			--line-height: .grid-full-height(@i)[@ret];
			line-height: var(--line-height);
		}
		.generate-typography(@n, (@i + 1));
	}
	.generate-typography(16);

	.generate-font-weights(@n, @i: 100) when (@i =< @n) {
		.font-weight@{suffix}-@{i} {
			font-weight: @i;
		}
		.generate-font-weights(@n, (@i + 100));
	}
	.generate-font-weights(900);

	/* GRID -----------------------------------------------------------*/
	.grid@{suffix} {
		display: grid;
		grid-template-columns: repeat(auto-fill, @grid-width);
		grid-auto-rows: minmax(@grid-height, auto);
		column-gap: @gutter-width;
		row-gap: @gutter-height;
	}

	.grid-fixed@{suffix} {
		grid-template-rows: repeat(auto-fill, @grid-height);
	}

	.grid-fixed-row-height@{suffix} {
		grid-auto-rows: @grid-height;
	}

	.col-span@{suffix}-full, .cols@{suffix}-full {
		grid-column: 1/-1;
	}

	.row-span@{suffix}-window {
		grid-row: span var(--window-rows) / span var(--window-rows);
	}

	.row-span@{suffix}-auto {
		height: fit-content;
	}

	.generate-grid(@n, @i: 1) when (@i =< @n) {
		.grid {
			& > .row-span@{suffix}-@{i},
			& > .rows-@{suffix}-@{i} {
				grid-row: span @i / span @i;
				max-height: .grid-height(@i)[@ret];
			}
			& > .col-span@{suffix}-@{i},
			& > .cols@{suffix}-@{i} {
				grid-column: span @i / span @i;
			}
			& > .row-start@{suffix}-@{i} {
				grid-row-start: @i !important;
			}
			& > .col-start@{suffix}-@{i} {
				grid-column-start: @i !important;
			}
			& > .row-pull@{suffix}-@{i} {
				grid-row-end: -@i !important;
			}
			& > .col-pull@{suffix}-@{i} {
				grid-column-end: -@i !important;
			}
			& > .row-fill@{suffix}-@{i} {
				grid-row: @i / -1;
			}
			& > .col-fill@{suffix}-@{i} {
				grid-column: @i / -1;
			}
		}
		html.@{device}-@{i} {
			--grid-cols: @i;
			font-size: ((100vw / @i) + (100vw / @i) *
				(@gutter-width-ratio / @i));

			.grid > .col-span@{suffix}-half {
				grid-column: span (@i/2) / span (@i/2);
			}
			.grid > .col-span@{suffix}-third {
				grid-column: span (@i/3) / span (@i/3);
			}
		}

		.generate-grid(@n, (@i + 1));
	}
	.generate-grid(64);

	/* DISPLAY --------------------------------------------------------*/
	.hide@{suffix} {
		display: none;
	}

	/* POSITION --------------------------------------------------------*/
	.sticky-top {
		position: sticky;
		top: 0;
		z-index: 100;
	}
}


.device-rules(default);

/*----------------------------------------------------------------------
 * LANDSCAPE
 *----------------------------------------------------------------------*/
@media (orientation: landscape) {
	.device-rules(landscape, -l);
}

/*----------------------------------------------------------------------
 * PORTRAIT
 *----------------------------------------------------------------------*/
@media (orientation: portrait) {
	.device-rules(portrait, -p);
}


/*----------------------------------------------------------------------
 * GLOBAL RULES
 *----------------------------------------------------------------------*/
.bg-image-cover, *[data-bg-image] {
	background-size: cover;
	background-position: center;
}

*[data-link] {
	cursor: pointer;
}

*[data-tag] {
	position: relative;
}
*[data-tag]::before {
	content: attr(data-tag);
	position: absolute;
	top: 0;
	left: 0;
	display:block;
}

