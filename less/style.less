/*!
	Theme Name: Wordpress Boilerplate
	Theme URI: https://github.com/RichardHabeeb/wordpress-boilerplate
	Author: Richard Habeeb
	Author URI: https://habeebr.bitbucket.io/
	Description:
	Tags:
	Version: 1.0
	Requires at least: 5.0
	Tested up to: 5.4
	Requires PHP: 7.0
	License: Apache
	License URI:
	Text Domain: wordpress-boilerplate
*/
/*! */
@import "reset.less";
@import "theme.less";

/*----------------------------------------------------------------------
 * HELPERS
 *----------------------------------------------------------------------*/
.grid-height(@n-rows) {
	@ret: (@n-rows * @grid-full-height - @gutter-height);
}

.grid-width(@n-cols) {
	@ret: (@n-cols * @grid-full-width - @gutter-width);
}

.grid-full-height(@n-rows) {
	@ret: (@n-rows * @grid-full-height);
}

.grid-full-width(@n-cols) {
	@ret: (@n-cols * @grid-full-width);
}

/*----------------------------------------------------------------------
 * GLOBAL RULES
 *----------------------------------------------------------------------*/
.bg-image-cover, *[data-bg-image] {
	background-size: cover;
	background-position: center;
}

*[data-link] {
	cursor: pointer;
}

*[data-tag] {
	position: relative;
}
*[data-tag]::before {
	content: attr(data-tag);
	position: absolute;
	top: 0;
	left: 0;
	display:block;
}

:root {
	--window-rows: 100;
	--grid-full-width: @grid-full-width;
	--grid-full-height: @grid-full-height;
	--gutter-width: @gutter-width;
	--gutter-height: @gutter-height;
	--grid-width: @grid-width;
	--grid-height: @grid-height;
}


body.grid {
	/* Fixes an edge case where the repeat(auto-fill, ...) fails to add the
	 * last column due to floating point rounding. */
	grid-template-columns: repeat(var(--window-cols), @grid-width);
}


/*----------------------------------------------------------------------
 * DEVICE RULES
 *----------------------------------------------------------------------*/
.device-rules(@device, @suffix...) {

	body:before {
		content: "@device";
		display:none;
		visibility: hidden;
	}

	/* OVERFLOW/ALIGN -------------------------------------------------*/
	.clip@{suffix} {
		overflow: clip;
	}
	.clip-x@{suffix} {
		overflow-x: clip;
	}
	.wrap@{suffix}, .break-word@{suffix} {
	  word-wrap: break-word;
	}
	.break-all@{suffix} {
	  word-wrap: break-word;
	  word-break: break-all;
	}
	.center@{suffix} {
		text-align: center;
	}
	.left@{suffix} {
		text-align: left;
	}
	.pre-line@{suffix} {
		white-space: pre-line;
	}
	.right-to-left@{suffix}, .rtl@{suffix} {
		direction: rtl;
	}


	/* LISTS ----------------------------------------------------------*/
	.no-bullets@{suffix}, .list-style-none@{suffix} {
		list-style: none;
	}

	/* FLEX ----------------------------------------------------------*/
	.flex@{suffix} {
		display: flex;
	}

	.flex-center@{suffix} {
		.flex;
		justify-content: center;
	}

	.flex-left@{suffix} {
		.flex;
		justify-content: left;
	}

	.flex-right@{suffix} {
		.flex;
		justify-content: end;
	}

	.flex-v-center@{suffix} {
		.flex;
		align-items: center;
	}

	.flex-top@{suffix} {
		.flex;
		align-items: baseline;
	}

	.flex-bottom@{suffix} {
		.flex;
		align-items: end;
	}

	.flex-column@{suffix} {
		.flex;
		flex-direction: column;
	}

	/* MARGIN ---------------------------------------------------------*/
	.margin-remove-left@{suffix}-gutter {
		margin-left: -@gutter-width;
	}

	.margin-remove-right@{suffix}-gutter {
		margin-right: -@gutter-width;
	}

	.margin-remove-top@{suffix}-gutter {
		margin-top: -@gutter-height;
	}

	.margin-remove-bottom@{suffix}-gutter {
		margin-bottom: -@gutter-height;
	}

	.margin-remove-x@{suffix}-gutter {
		margin-left: -@gutter-width;
		margin-right: -@gutter-width;
	}

	.margin-remove-y@{suffix}-gutter {
		margin-top: -@gutter-height;
		margin-bottom: -@gutter-height;
	}

	.margin-remove@{suffix}-gutter {
		margin: -@gutter-height -@gutter-width;
	}

	.margin-remove@{suffix}-excess-line-height {
		margin-top: calc(-1 * calc(var(--line-height) - var(--cap-height)));
	}

	.margin-none@{suffix} {
		margin: 0;
	}

	.generate-margins(@n, @i: 1) when (@i =< @n) {
		.margin-top@{suffix}-@{i} {
			margin-top: .grid-full-height(@i)[@ret];
		}

		.margin-bottom@{suffix}-@{i} {
			margin-bottom: .grid-full-height(@i)[@ret];
		}

		.margin-left@{suffix}-@{i} {
			margin-left: .grid-full-width(@i)[@ret];
		}

		.margin-right@{suffix}-@{i} {
			margin-right: .grid-full-width(@i)[@ret];
		}

		.margin-x@{suffix}-@{i} {
			margin-left: .grid-full-width(@i)[@ret];
			margin-right: .grid-full-width(@i)[@ret];
		}

		.margin-y@{suffix}-@{i} {
			margin-top: .grid-full-height(@i)[@ret];
			margin-bottom: .grid-full-height(@i)[@ret];
		}

		.margin@{suffix}-@{i} {
			margin: .grid-full-height(@i)[@ret] .grid-full-width(@i)[@ret];
		}

		.margin-remove-top@{suffix}-@{i} {
			margin-top: (-1 * .grid-full-height(@i)[@ret]);
		}

		.margin-remove-bottom@{suffix}-@{i} {
			margin-bottom: (-1 * .grid-full-height(@i)[@ret]);
		}

		.margin-remove-left@{suffix}-@{i} {
			margin-left: -.grid-full-width(@i)[@ret];
		}

		.margin-remove-right@{suffix}-@{i} {
			margin-right: -.grid-full-width(@i)[@ret];
		}

		.margin-remove-x@{suffix}-@{i} {
			margin-left: -.grid-full-width(@i)[@ret];
			margin-right: -.grid-full-width(@i)[@ret];
		}

		.margin-remove-y@{suffix}-@{i} {
			margin-top: -.grid-full-height(@i)[@ret];
			margin-bottom: -.grid-full-height(@i)[@ret];
		}

		.margin-remove-@{suffix}-@{i} {
			margin: -.grid-full-height(@i)[@ret] -.grid-full-width(@i)[@ret];
		}
		.generate-margins(@n, (@i + 1));
	}
	.generate-margins(16);


	/* PADDING --------------------------------------------------------*/
	.padding-none@{suffix} {
		padding: 0;
	}
	.padding-remove@{suffix}-excess-line-height {
		padding-top: calc(-1 * calc(var(--line-height) - var(--cap-height)));
	}

	.generate-paddings(@n, @i: 1) when (@i =< @n) {
		.padding-top@{suffix}-@{i} {
			padding-top: .grid-full-height(@i)[@ret];
		}

		.padding-bottom@{suffix}-@{i} {
			padding-bottom: .grid-full-height(@i)[@ret];
		}

		.padding-left@{suffix}-@{i} {
			padding-left: .grid-full-width(@i)[@ret];
		}

		.padding-right@{suffix}-@{i} {
			padding-right: .grid-full-width(@i)[@ret];
		}

		.padding-x@{suffix}-@{i} {
			padding-left: .grid-full-width(@i)[@ret];
			padding-right: .grid-full-width(@i)[@ret];
		}

		.padding-y@{suffix}-@{i} {
			padding-top: .grid-full-height(@i)[@ret];
			padding-bottom: .grid-full-height(@i)[@ret];
		}

		.padding@{suffix}-@{i} {
			padding: .grid-full-height(@i)[@ret] .grid-full-width(@i)[@ret];
		}

		.padding-left@{suffix}-to-aria-level[aria-level="@{i}"] {
			padding-left: .grid-full-width(@i)[@ret];
		}

		.generate-paddings(@n, (@i + 1));
	}
	.generate-paddings(16);

	/* FILTER ---------------------------------------------------------*/

	.backdrop-blur@{suffix} {
		backdrop-filter: blur(3px);
		background: rgba(0,0,0,0.1);
	}

	.backdrop-invert@{suffix} {
		backdrop-filter: invert(100%);
	}

	.blend-difference@{suffix} {
		mix-blend-mode: difference;
	}

	/* BORDER ---------------------------------------------------------*/
	.circle@{suffix} {
		border-radius: 100%;
	}

	/* SIZE -----------------------------------------------------------*/
	.full-screen-height@{suffix} {
		height: 100vh;
	}

	.full-height@{suffix} {
		height: 100%;
	}

	.full-width@{suffix} {
		width: 100%;
	}

	.width@{suffix}-auto {
		width: auto;
	}

	.generate-sizes(@n, @i: 1) when (@i =< @n) {
		.height@{suffix}-@{i} {
			height: .grid-height(@i)[@ret];
		}
		.width@{suffix}-@{i} {
			width: .grid-width(@i)[@ret];

			&.grid {
				grid-template-columns: repeat(@i, @grid-width);
			}
		}
		.generate-sizes(@n, (@i + 1));
	}
	.generate-sizes(32);


	/* TYPOGRAPHY -----------------------------------------------------*/
	.text-decoration-none@{suffix}, .no-underline@{suffix} {
		text-decoration: none;
	}

	.underline@{suffix} {
		text-decoration: underline;
	}

	.generate-typography(@n, @i: 1) when (@i =< @n) {
		.cap-height@{suffix}-@{i} {
			--cap-height: .grid-height(@i)[@ret];
		}

		.line-height@{suffix}-@{i} {
			--line-height: .grid-full-height(@i)[@ret];
			line-height: var(--line-height);
		}
		.generate-typography(@n, (@i + 1));
	}
	.generate-typography(16);

	.generate-font-weights(@n, @i: 100) when (@i =< @n) {
		.font-weight@{suffix}-@{i} {
			font-weight: @i;
		}
		.font-weight-important@{suffix}-@{i} {
			font-weight: @i !important;
		}
		.generate-font-weights(@n, (@i + 100));
	}
	.generate-font-weights(900);

	/* GRID -----------------------------------------------------------*/
	.grid@{suffix} {
		display: grid;
		grid-template-columns: repeat(auto-fill, @grid-width);
		grid-auto-rows: minmax(@grid-height, auto);
		column-gap: @gutter-width;
		row-gap: @gutter-height;
	}

	.grid-fixed@{suffix} {
		grid-template-rows: repeat(auto-fill, @grid-height);
	}

	.grid-fixed-row-height@{suffix} {
		grid-auto-rows: @grid-height;
	}

	.col-span@{suffix}-full, .cols@{suffix}-full {
		grid-column: 1/-1;
	}

	.row-span@{suffix}-window {
		grid-row: span var(--window-rows) / span var(--window-rows);
	}

	.row-span@{suffix}-auto {
		height: fit-content;
	}


	.generate-grid(@n, @i: 1) when (@i =< @n) {
		.row-span@{suffix}-@{i},
		.rows-@{suffix}-@{i} {
			grid-row: span @i / span @i;
			max-height: .grid-height(@i)[@ret];
		}
		.col-span@{suffix}-@{i},
		.cols@{suffix}-@{i} {
			grid-column: span @i / span @i;
		}
		.row-start@{suffix}-@{i} {
			grid-row-start: @i !important;
		}
		.col-start@{suffix}-@{i} {
			grid-column-start: @i !important;
		}
		.row-pull@{suffix}-@{i} {
			grid-row-end: -@i !important;
		}
		.col-pull@{suffix}-@{i} {
			grid-column-end: -@i !important;
		}
		.row-fill@{suffix}-@{i} {
			grid-row: @i / -1;
		}
		.col-fill@{suffix}-@{i} {
			grid-column: @i / -1;
		}

		html.@{device}-@{i} {
			--window-cols: @i;
			font-size: (100vw / @i) * (1 + (@gutter-width-ratio / @i));

			.grid > .col-span@{suffix}-half {
				grid-column: span (@i/2) / span (@i/2);
			}
			.grid > .col-span@{suffix}-third {
				grid-column: span (@i/3) / span (@i/3);
			}
		}

		.generate-grid(@n, (@i + 1));
	}
	.generate-grid(64);

	/* DISPLAY --------------------------------------------------------*/
	.hide@{suffix} {
		display: none;
	}

	.popup-accordion@{suffix}, .accordion@{suffix} {
		display: none;

		&[aria-selected="true"] {
			display:block;
		}
	}

	.popup-dropdown@{suffix}, .dropdown@{suffix} {
		transform-origin: 0% 0%;
		transform: scaleY(0);

		position: absolute;
		top: inherit;
		z-index: 10000;

		&[aria-selected="true"] {
			transform: scaleY(100%);
		}
	}

	.popup-open@{suffix} {
		&.popup-dropdown@{suffix}, &.dropdown@{suffix} {
			transform: scaleY(100%);
		}
		&.popup-accordion@{suffix}, &.accordion@{suffix} {
			display:block;
		}
	}

	.popup-slow@{suffix} {
		transition: transform 0.5s;
	}

	.popup-fast@{suffix} {
		transition: transform 0.1s;
	}


	/* POSITION --------------------------------------------------------*/
	.sticky-top@{suffix} {
		position: sticky;
		top: 0;
	}

	.relative@{suffix}, .position-relative@{suffix} {
		position: relative;
	}

}


.device-rules(default);

/*----------------------------------------------------------------------
 * LANDSCAPE
 *----------------------------------------------------------------------*/
@media (orientation: landscape) {
	.device-rules(landscape, -l);
}

/*----------------------------------------------------------------------
 * PORTRAIT
 *----------------------------------------------------------------------*/
@media (orientation: portrait) {
	.device-rules(portrait, -p);
}

/*----------------------------------------------------------------------
 * COLORS
 *----------------------------------------------------------------------*/

.generate-empty-device-classes(@class) {
	.@{class}-p {}
}
.generate-valid-device-classes(@class) {
	@media (orientation: portrait) {
		.@{class}-p {
			&:extend(.@{class});
		}
	}
}

.generate-device-classes(@class) {
}



.make-color(@color) {
	:root {
		--@{color}: @@color;
	}

	.bg-color-@{color}, .bg-@{color} {
		background-color: @@color;
	}
	.bg-color-@{color}-hover, .bg-@{color}-hover {
		transition: ease-in-out 0.2s;
		&:hover {
			background-color: @@color;
		}
	}
	.color-@{color}, .font-color-@{color} {
		color: @@color;
	}
	.font-glow-@{color} {
		text-shadow: 0em 0em 0.25rem @@color;
	}
	.box-glow-@{color} {
		box-shadow: 0px 0px 0.25rem @@color;
	}
	.font-shadow-@{color} {
		text-shadow: 0.02em 0.02em 0rem @@color;
	}
	.box-shadow-@{color} {
		box-shadow: 0.02em 0.02em 0rem @@color;
	}
	.border-@{color} {
		border: 2px solid @@color;
	}

	.make-faded-color(@percent) {
		.bg-color-@{color}-@{percent}, .bg-@{color}-@{percent} {
			background-color: fade(@@color, @percent);
		}
		.bg-color-@{color}-@{percent}-hover, .bg-@{color}-@{percent}-hover {
			transition: ease-in-out 0.2s;
			&:hover {
				background-color: fade(@@color, @percent);
			}
		}
		.font-glow-@{color}-@{percent} {
			text-shadow: 0px 0px 0.25rem fade(@@color, @percent);
		}
		.box-glow-@{color}-@{percent} {
			box-shadow: 0px 0px 0.25rem fade(@@color, @percent);
		}
		.font-shadow-@{color}-@{percent} {
			text-shadow: 0.02em 0.02em 0rem fade(@@color, @percent);
		}
		.box-shadow-@{color}-@{percent} {
			box-shadow: 0.02em 0.02em 0rem fade(@@color, @percent);
		}
	}
	.make-faded-color(75);
	.make-faded-color(50);
	.make-faded-color(25);
}

/*----------------------------------------------------------------------
 * DEFAULTS & WORDPRESS OVERRIDES
 *----------------------------------------------------------------------*/
ul:not(.no-bullets) {
	.padding-left-1;
}

.is-layout-flex, .wp-block-columns.is-layout-flex {
	gap: @gutter-width;
}

.wp-block-buttons {
	.margin-bottom-1;

	& > .wp-block-button {
		padding: unset;
	}
}

figure.wp-block-image {
	.margin-bottom-1;
}

.wp-block-columns {
	.margin-bottom-1;
}


article.page {
	& > :is(h1, h2, h3, h4, h5, h6) {
		.padding-bottom-1;
	}

}

.widgets > aside {
	.padding-bottom-1;
}




