/*!
	Theme Name: Wordpress Boilerplate
	Theme URI: https://github.com/RichardHabeeb/wordpress-boilerplate
	Author: Richard Habeeb
	Author URI: https://habeebr.bitbucket.io/
	Description:
	Tags:
	Version: 1.0
	Requires at least: 5.0
	Tested up to: 5.4
	Requires PHP: 7.0
	License: Apache
	License URI:
	Text Domain: wordpress-boilerplate
*/
@import "reset.less";


.clip {
	overflow: clip;
}

.clip-x {
	overflow-x: clip;
}


.wrap, .break-word {
  word-wrap: break-word;
}

.break-all {
  word-wrap: break-word;
  word-break: break-all;
}

.center {
	text-align: center;
}

.left {
	text-align: left;
}

.flex {
	display: flex;
}

.flex-center {
	.flex;
	justify-content: center;
}

.flex-left {
	.flex;
	justify-content: left;
}

.flex-right {
	.flex;
	justify-content: end;
}

.flex-v-center {
	.flex;
	align-items: center;
}

.flex-top {
	.flex;
	align-items: baseline;
}

.flex-bottom {
	.flex;
	align-items: end;
}

.sticky-top {
	position: sticky;
	top: 0;
	z-index: 100;
}

.full-screen-height {
	height: 100vh;
}

.full-height {
	height: 100%;
}

.full-width {
	width: 100%;
}

.full-screen-margin-top {
	margin-top: 100vh;
}

.grid-height(@n-rows) {
	@ret: (@n-rows * @grid-full-height - @gutter-height);
}

.grid-width(@n-cols) {
	@ret: (@n-cols * @grid-full-width - @gutter-width);
}

.grid-full-height(@n-rows) {
	@ret: (@n-rows * @grid-full-height);
}

.grid-full-width(@n-cols) {
	@ret: (@n-cols * @grid-full-width);
}

.grid {
	display: grid;
	grid-template-columns: repeat(auto-fill, @grid-width);
	grid-auto-rows: minmax(@grid-height, auto);
	column-gap: @gutter-width;
	row-gap: @gutter-height;
	//margin-right: -@gutter-width;
}

.grid-fixed {
	grid-template-rows: repeat(auto-fill, @grid-height);
}

.grid-fixed-height {
	grid-auto-rows: @grid-height;
}

.col-span-full, .cols-full {
	grid-column: 1/-1;
}

.row-span-window {
	grid-row: span var(--window-rows) / span var(--window-rows);
}

@media (orientation: landscape) {
	.col-span-l-full, .cols-l-full {
		grid-column: 1/-1;
	}
}

@media (orientation: portrait) {
	.col-span-p-full, .cols-p-full {
		grid-column: 1/-1;
	}
}



.cell-operations(@i, @suffix...) {
	& > .row-span-@{suffix}@{i},
	& > .rows-@{suffix}@{i} {
		grid-row: span @i / span @i;
		max-height: .grid-height(@i)[@ret];
	}
	& > .col-span-@{suffix}@{i},
	& > .cols-@{suffix}@{i} {
		grid-column: span @i / span @i;
	}
	& > .row-start-@{suffix}@{i} {
		grid-row-start: @i !important;
	}
	& > .col-start-@{suffix}@{i} {
		grid-column-start: @i !important;
	}
	& > .row-pull-@{suffix}@{i} {
		grid-row-end: -@i !important;
	}
	& > .col-pull-@{suffix}@{i} {
		grid-column-end: -@i !important;
	}
	& > .row-fill-@{suffix}@{i} {
		grid-row: @i / -1;
	}
	& > .col-fill-@{suffix}@{i} {
		grid-column: @i / -1;
	}
}

.generate-widths(@n, @i: 1) when (@i =< @n) {

	.cap-height-@{i} {
		--cap-height: .grid-height(@i)[@ret];
	}

	.line-height-@{i} {
		--line-height: .grid-height(@i)[@ret];
		line-height: var(--line-height);
	}

	.height-@{i} {
		height: .grid-height(@i)[@ret];
	}

	.margin-top-@{i} {
		margin-top: .grid-full-height(@i)[@ret];
	}

	.margin-bottom-@{i} {
		margin-bottom: .grid-full-height(@i)[@ret];
	}

	.margin-left-@{i} {
		margin-left: .grid-full-width(@i)[@ret];
	}

	.margin-right-@{i} {
		margin-right: .grid-full-width(@i)[@ret];
	}

	.padding-top-@{i} {
		padding-top: .grid-full-height(@i)[@ret];
	}

	.padding-bottom-@{i} {
		padding-bottom: .grid-full-height(@i)[@ret];
	}

	.padding-left-@{i} {
		padding-left: .grid-full-width(@i)[@ret];
	}

	.padding-right-@{i} {
		padding-right: .grid-full-width(@i)[@ret];
	}

	.grid {
		.cell-operations(@i);
	}

	html.landscape-@{i}, html.portrait-@{i} {
		.grid > .col-span-half {
			grid-column: span (@i/2) / span (@i/2);
		}
		.grid > .col-span-third {
			grid-column: span (@i/3) / span (@i/3);
		}
	}

	@media (orientation: landscape) {
		html.landscape-@{i} {
			--grid-cols: @i;
			font-size: ((100vw / @i) + (100vw / @i) * (@gutter-width-ratio / @i));

			.grid > .col-span-l-half {
				grid-column: span (@i/2) / span (@i/2);
			}
			.grid > .col-span-l-third {
				grid-column: span (@i/3) / span (@i/3);
			}
		}

		.grid {
			.cell-operations(@i, l-);
		}
	}
	@media (orientation: portrait) {
		html.portrait-@{i} {
			font-size: ((100vw / @i) + (100vw / @i) * (@gutter-width-ratio / @i));

			.grid > .col-span-p-half {
				grid-column: span (@i/2) / span (@i/2);
			}
			.grid > .col-span-p-third {
				grid-column: span (@i/3) / span (@i/3);
			}
		}

		.grid {
			.cell-operations(@i, p-);
		}
	}


	.generate-widths(@n, (@i + 1));
}
.generate-widths(64);



.hide {
	display: none;
}

@media (orientation: landscape) {
	.hide-l {
		display: none;
	}
}

@media (orientation: portrait) {
	.hide-p {
		display: none;
	}
}


.bg-image-cover, *[data-bg-image] {
	background-size: cover;
	background-position: center;
}

*[data-link] {
	cursor: pointer;
}

.hover-darken {
	transition: ease-in-out 0.2s;

	&:hover {
		background-color: rgba(0,0,0,0.5);
	}
}

.generate-font-weights(@n, @i: 100) when (@i =< @n) {
	.font-weight-@{i} {
		font-weight: @i;
	}
	.generate-font-weights(@n, (@i + 100));
}
.generate-font-weights(900);



